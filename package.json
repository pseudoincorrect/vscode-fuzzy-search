{
  "name": "vscode-regex-search-telescope",
  "displayName": "Regex Search Telescope",
  "description": "A cross-platform telescope-like regex search extension for VSCode with split-pane interface (developed with LLM assistance)",
  "version": "0.0.1",
  "author": "Maxime Clement",
  "publisher": "MaximeClement6",
  "repository": {
    "type": "git",
    "url": "https://github.com/pseudoincorrect/vscode-regex-search"
  },
  "license": "MIT",
  "engines": {
    "vscode": "^1.74.0"
  },
  "os": [
    "win32",
    "darwin",
    "linux"
  ],
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onCommand:regexSearch.searchInFile",
    "onCommand:regexSearch.searchInFolder"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "regexSearch.searchInFile",
        "title": "Regex Search: Search in Current File"
      },
      {
        "command": "regexSearch.searchInFolder",
        "title": "Regex Search: Search in Current Folder"
      }
    ],
    "keybindings": [
      {
        "command": "regexSearch.searchInFile",
        "key": "ctrl+shift+f",
        "mac": "cmd+shift+f"
      },
      {
        "command": "regexSearch.searchInFolder",
        "key": "ctrl+shift+p",
        "mac": "cmd+shift+p"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "npm run compile && node ./out/test/suite/searchInFile.test.js",
    "package": "npm run compile && vsce package --out releases/",
    "package-release": "npm run compile && vsce package --out releases/ && echo 'Extension packaged to releases/ folder'",
    "install-extension": "npm run package && code --install-extension releases/vscode-regex-search-telescope-$(node -p \"require('./package.json').version\").vsix",
    "clean-releases": "node -e \"const fs = require('fs'); const path = require('path'); try { fs.readdirSync('releases').filter(f => f.endsWith('.vsix')).forEach(f => fs.unlinkSync(path.join('releases', f))); } catch(e) { console.log('No .vsix files to clean'); }\""
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.10",
    "@types/node": "16.x",
    "@types/vscode": "^1.74.0",
    "@typescript-eslint/eslint-plugin": "^5.45.0",
    "@typescript-eslint/parser": "^5.45.0",
    "@vscode/test-electron": "^2.5.2",
    "@vscode/vsce": "^3.6.0",
    "eslint": "^8.28.0",
    "mocha": "^11.7.1",
    "typescript": "^4.9.4"
  }
}
